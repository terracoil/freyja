"""Shell completion module for auto-cli-py.

This module provides shell completion functionality for CLIs generated by auto-cli-py.
Supports bash, zsh, fish, and PowerShell completion.
"""

from .base import CompletionContext, CompletionHandler
from .bash import BashCompletionHandler
from .fish import FishCompletionHandler
from .installer import CompletionInstaller
from .powershell import PowerShellCompletionHandler
from .zsh import ZshCompletionHandler

__all__ = [
  'CompletionContext',
  'CompletionHandler',
  'BashCompletionHandler',
  'ZshCompletionHandler',
  'FishCompletionHandler',
  'PowerShellCompletionHandler',
  'CompletionInstaller'
]


def get_completion_handler(cli, shell: str = None) -> CompletionHandler:
  """Get appropriate completion handler for shell.

  :param cli: CLI instance
  :param shell: Target shell (auto-detect if None)
  :return: Completion handler instance
  """
  if not shell:
    # Try to detect shell
    handler = BashCompletionHandler(cli)  # Use bash as fallback
    shell = handler.detect_shell() or 'bash'

  if shell == 'bash':
    return BashCompletionHandler(cli)
  elif shell == 'zsh':
    return ZshCompletionHandler(cli)
  elif shell == 'fish':
    return FishCompletionHandler(cli)
  elif shell == 'powershell':
    return PowerShellCompletionHandler(cli)
  else:
    # Default to bash for unknown shells
    return BashCompletionHandler(cli)
