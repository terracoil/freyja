[tool.poetry]
name = "freyja"
version = "1.0.22"  # Will use poetry-dynamic-versioning
description = "Python Library that builds a complete CLI given one or more functions using introspection"
authors = ["Steven Miers <steven.miers@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/terracoil/freyja"
homepage = "https://pypi.org/project/freyja/"
documentation = "https://github.com/terracoil/freyja/tree/main/docs"
keywords = ["cli", "auto", "introspection", "argparse", "command-line"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
packages = [{include = "freyja"}]
include = [
    "LICENSE",
    "README.md",
]

[tool.poetry.dependencies]
python = "^3.13.7"
# No runtime dependencies - the library uses only stdlib

[dependency-groups]
test = [
    "black (>= 25.9.0, <27.0.0)",
    "pytest (>=8.4.2,<9.0.0)",
    "pytest-cov (>=7.0.0,<8.0.0)",
    "pytest-timeout (>=2.3.1,<3.0.0)",
    "pytest-xdist (>=3.8.0,<4.0.0)",
    "ruff (>=0.14.2,<0.15.0)"
]
dev = [
    { include-group = "test" },
    "freyja (>=1.0.22,<2.0.0)",
    "mypy[reports] (>=1.18.2,<2.0.0)",
    "pre-commit (>=4.3.0,<5.0.0)",
    "poetry-dynamic-versioning (>=1.9.1,<2.0.0)"
]

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "semver"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient, can be tightened later
show_error_codes = true
exclude = [
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=freyja --cov-report=term-missing --cov-report=html:reports/coverage --cov-report=xml:reports/coverage/converage.xml"
testpaths = ["freyja/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

#[tool.coverage.run]
#source = ["freyja"]
#omit = [
#    "*/tests/*",
#    "*/test_*",
#]
#
#[tool.coverage.report]
#exclude_lines = [
#    "pragma: no cover",
#    "def __repr__",
#    "if self.debug:",
#    "if settings.DEBUG",
#    "raise AssertionError",
#    "raise NotImplementedError",
#    "if 0:",
#    "if __name__ == .__main__.:",
#]
