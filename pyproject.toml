[tool.poetry]
name = "freyja"
version = "1.0.6"  # Will use poetry-dynamic-versioning
description = "Python Library that builds a complete CLI given one or more functions using introspection"
authors = ["Steven Miers <steven.miers@gmail.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/tangledpath/freyja"
homepage = "https://pypi.org/project/freyja/"
documentation = "https://github.com/tangledpath/freyja/docs"
keywords = ["cli", "auto", "introspection", "argparse", "command-line"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
packages = [{include = "freyja"}]
include = [
    "LICENSE",
    "README.md",
]

[tool.poetry.dependencies]
python = "^3.13.7"
# No runtime dependencies - the library uses only stdlib

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pylint = "^3.0.0"
mypy = "^1.8.0"
ruff = "^0.2.0"
black = "^24.0.0"
pre-commit = "^3.6.0"
ipython = "^8.20.0"
poetry-dynamic-versioning = "^1.9.1"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

# Tool configurations
[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
]
ignore = [
    "S101",  # Use of assert detected (OK in tests)
    "S603",  # subprocess call (OK in tests)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Start lenient, can be tightened later
show_error_codes = true
exclude = [
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=freyja --cov-report=term-missing --cov-report=html"
testpaths = ["freyja/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["freyja"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]